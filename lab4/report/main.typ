#import "nstu_template//template.typ": * // Импорт шаблона

// Пример конфигурации
// (многие параметры здесь не обязательны)
#show: project.with(
  faculty: "ФПМИ",
  department: "Кафедра прикладной математики",
  discipline: "Компьютерная графика",
  task_type: "Практическое задание №4",
  task_name: "ИНТЕРАКТИВНОЕ СОЗДАНИЕ КРИВЫХ И ПОВЕРХНОСТЕЙ C ИСПОЛЬЗОВАНИЕМ СПЛАЙНОВ",
  students: (
    "Дзюбло Павел",
    "Данченко Иван"
  ),
  teachers: (
    "Задорожный A.Г.",
    ""
  ),
  //variant: "",
  group: "ПМ-02",
  year: "2023",
)

= Цель работы
 
Реализовать программу, отображающую график функции, получаемой в результате использования соответствующего сплайна.

= Средства реализации приложения

Основной язык - C\#, тулкит для OpenGL - библиотека OpenTK, графический интерфейс реализовывался c помощью ImGUI. 

= Возможности приложения

- Есть возможность переключаться между тремя состояниями: 
  - *Spectate* - просмотр полученного изображения
  - *Workspace* - все слои, кроме выбранного, прозрачные
  - *Edit* - можно добавлять или убирать точки для выбранного слоя

Текущий режим можно узнать по надписи сверху.
  
B режиме *Workspace* происходит основная работа c выбранным слоем, a то есть:
1. Перемещение - изменяя параметр *Position* или c помощью перехода в режим _Grab_(клавиша G) c последующим изменением положения c помощью мыши.
2. Масштабирование - информация дублируется c первого пунка, только изменяется параметр *Scale* или переход в режим _Scale_(S).
3. Поворот - параметр *Rotation* или переход в режим _Rotate_(R).
4. Изменение цвета - изменение c помощью аттрибута *Color*.
5. Добавить новый слой - нажатие на кнопку *Add* или c помощью бинда на клавишу N.
6. Удалить выбранный слой - нажатие на кнопку *Remove*

Также можно двигать камеру c помощью зажатого колёсика мыши  и масштабировать c помощью прокрутки.


== Пример работы приложения

#v(0.5cm)

#align(center)[#image("pics/3.png", width: 90%)]

#pagebreak()

= Листинг

#let text = read("code/App.cs")
#raw(text, lang: "cs")

#let text = read("code/Layer.cs")
#raw(text, lang: "cs")

#let text = read("code/GUI.cs")
#raw(text, lang: "cs")

#let text = read("code/Camera.cs")
#raw(text, lang: "cs")